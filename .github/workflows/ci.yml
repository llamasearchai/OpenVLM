name: OpenVLM CI

on:
  push:
    branches: [ "main", "develop" ] # Add other branches as needed, e.g., release branches
  pull_request:
    branches: [ "main", "develop" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev,spatial,diagram,datasette,llm_integration]" # Install with all extras for comprehensive testing
        # Install system dependencies for diagram analysis if needed, e.g., Tesseract
        # sudo apt-get update && sudo apt-get install -y tesseract-ocr libtesseract-dev libleptonica-dev

    - name: Lint with Pylint
      run: |
        pylint open_vlm --errors-only # Focus on errors first, can be expanded

    - name: Format with Black and Isort (Check only)
      run: |
        black --check .
        isort --check .

    - name: Static Type Checking with MyPy
      run: |
        mypy open_vlm --ignore-missing-imports # Add --strict later as type hinting improves

    - name: Test with Pytest
      run: |
        pytest tests/
        # Consider adding coverage: pytest --cov=open_vlm --cov-report=xml tests/

    # Optional: Upload coverage report to Codecov
    # - name: Upload coverage to Codecov
    #   uses: codecov/codecov-action@v3
    #   with:
    #     token: ${{ secrets.CODECOV_TOKEN }} # Configure as a repository secret
    #     files: ./coverage.xml
    #     fail_ci_if_error: true 